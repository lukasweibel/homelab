---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: capacitor-next
  namespace: flux-system

---
apiVersion: v1
kind: Secret
metadata:
  name: capacitor-next
  namespace: flux-system
type: Opaque
stringData:
  # Minimal valid registry for the mounted file required by the Deployment.
  # Adjust later as needed for your setup.
  registry.yaml: |
    sources: []

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capacitor-next
  namespace: flux-system
  labels:
    app: capacitor-next
spec:
  replicas: 1
  selector:
    matchLabels:
      app: capacitor-next
  template:
    metadata:
      labels:
        app: capacitor-next
    spec:
      serviceAccountName: capacitor-next
      containers:
        - name: capacitor-next
          image: ghcr.io/gimlet-io/capacitor-next:v2025-09.2
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 10
          envFrom:
            - secretRef:
                name: capacitor-next
          volumeMounts:
            - name: registry
              mountPath: /app/backend/registry.yaml
              subPath: registry.yaml
      volumes:
        - name: registry
          secret:
            secretName: capacitor-next
            items:
              - key: registry.yaml
                path: registry.yaml

---
apiVersion: v1
kind: Service
metadata:
  name: capacitor-next
  namespace: flux-system
spec:
  selector:
    app: capacitor-next
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: capacitor
  namespace: flux-system
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web   # switch to websecure + tls: if your Traefik is HTTPS-only
spec:
  ingressClassName: traefik
  rules:
    - host: capacitor.local.lan
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: capacitor-next
                port:
                  number: 8080
